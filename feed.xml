<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://blog.grigory.nl/</id><title>Grigory Avdyushin</title><subtitle>Some techincal stuff</subtitle> <updated>2025-03-27T11:47:35+01:00</updated> <author> <name>Grigory Avdyushin</name> <uri>https://blog.grigory.nl/</uri> </author><link rel="self" type="application/atom+xml" href="https://blog.grigory.nl/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://blog.grigory.nl/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2025 Grigory Avdyushin </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Building custom mechanical keyboard</title><link href="https://blog.grigory.nl/posts/franky36/" rel="alternate" type="text/html" title="Building custom mechanical keyboard" /><published>2025-03-24T19:55:04+01:00</published> <updated>2025-03-24T19:55:04+01:00</updated> <id>https://blog.grigory.nl/posts/franky36/</id> <content src="https://blog.grigory.nl/posts/franky36/" /> <author> <name>Grigory Avdyushin</name> </author> <summary> I’ve built a custom mechanical keyboard using a split design with a single controller. Design process Split keyboard with a single controller, making it easier to set up compared to splits with two controllers connected via a TRRS cable. This design simplifies the wiring and reduces the number of components needed, streamlining the assembly process. Case The case was designed using Open... </summary> </entry> <entry><title>Building a Clipboard Manager with SwiftUI for macOS</title><link href="https://blog.grigory.nl/posts/clipminder/" rel="alternate" type="text/html" title="Building a Clipboard Manager with SwiftUI for macOS" /><published>2025-02-25T19:55:04+01:00</published> <updated>2025-02-25T19:55:04+01:00</updated> <id>https://blog.grigory.nl/posts/clipminder/</id> <content src="https://blog.grigory.nl/posts/clipminder/" /> <author> <name>Grigory Avdyushin</name> </author> <summary> In this post, I will show you how to build a simple clipboard manager for macOS using SwiftUI. The app will display a list of the last items copied to the clipboard and allow you to copy them back to the clipboard. Introduction I already have an app developed back in 2019 that does this, but it uses AppKit and I wanted to try building it with SwiftUI. This time it will not be published on... </summary> </entry> <entry><title>Setup RetroArch on Raspberry Pi</title><link href="https://blog.grigory.nl/posts/raspberry-pi-retroarch/" rel="alternate" type="text/html" title="Setup RetroArch on Raspberry Pi" /><published>2021-04-06T20:55:04+02:00</published> <updated>2022-09-02T18:22:43+02:00</updated> <id>https://blog.grigory.nl/posts/raspberry-pi-retroarch/</id> <content src="https://blog.grigory.nl/posts/raspberry-pi-retroarch/" /> <author> <name>Grigory Avdyushin</name> </author> <summary> Requirements: Raspberry Pi 4 SD card with Raspbian Another Linux (virtual) desktop to use GParted Once raspbian image installed it’s good to shrink root partition and extract another one for storage. The goal is to have Raspbian with Desktop and option to boot into RetroArch without using Lakka. This will give full control over OS like using custom services and applications. Change ... </summary> </entry> <entry><title>Setup Lakka on Raspberry Pi</title><link href="https://blog.grigory.nl/posts/raspberry-pi-lakka/" rel="alternate" type="text/html" title="Setup Lakka on Raspberry Pi" /><published>2020-07-04T10:04:46+02:00</published> <updated>2022-09-02T18:22:43+02:00</updated> <id>https://blog.grigory.nl/posts/raspberry-pi-lakka/</id> <content src="https://blog.grigory.nl/posts/raspberry-pi-lakka/" /> <author> <name>Grigory Avdyushin</name> </author> <summary> Lakka configuration Connect Ethernet cable or connect to WiFi from GUI. Turn on SSH in Services Static IP Connect via ssh: ssh root@lakka.local Edit WiFi settings: $ vi /storage/.cache/connman/wifi_XXXXXX_managed_psk/settings Change IP method to manual and set local_address: [wifi_XXXXXX_managed_psk] Name=XXXXXXXXXX SSID=XXXXXXXXXXXXXXXXXXXX Favorite=true AutoConnect=true Passph... </summary> </entry> <entry><title>Setup EDuke32 on macOS</title><link href="https://blog.grigory.nl/posts/eduke32-macos/" rel="alternate" type="text/html" title="Setup EDuke32 on macOS" /><published>2020-07-01T13:36:37+02:00</published> <updated>2022-09-02T18:22:43+02:00</updated> <id>https://blog.grigory.nl/posts/eduke32-macos/</id> <content src="https://blog.grigory.nl/posts/eduke32-macos/" /> <author> <name>Grigory Avdyushin</name> </author> <summary> EDuke32 Configuration Check list to run EDuke32 on macOS with HRP (High Resolution Pack): Get EDuke32 and launch for the first time to generate default config files Check logs here: ~/Library/Logs/eduke32.log Configuration path: ~/.config/eduke32/ Edit eduke32.cfg to set NoAutoLoad = 0 Get HRP and put zip files into: ~/.config/eduke32/autoload/ Display Setup -&amp;gt; Video Mode -&amp;gt... </summary> </entry> </feed>
